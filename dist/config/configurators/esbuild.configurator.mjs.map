{
  "version": 3,
  "sources": ["../../../src/config/configurators/esbuild.configurator.mts"],
  "sourcesContent": ["/*\n * Copyright (c) 2022 Kiyozz.\n *\n * All rights reserved.\n */\n\nimport deepMerge from 'deepmerge'\nimport { BuildOptions } from 'esbuild'\nimport nodeModule from 'node:module'\nimport path from 'node:path'\n\nimport type { EnvConfig } from '../config.mjs'\nimport { Target, TypeConfig } from '../enums.mjs'\nimport type { Configurator } from './base.configurator.mjs'\n\nexport class EsbuildConfigurator implements Configurator<TypeConfig.esbuild> {\n  public readonly type = TypeConfig.esbuild\n\n  constructor(public readonly config: EnvConfig) {}\n\n  toBuilderConfig(\n    partial: Partial<BuildOptions>,\n    userConfig: BuildOptions,\n    target: Target,\n  ): BuildOptions {\n    const additional: Partial<BuildOptions> = {}\n    const out = path.resolve(\n      process.cwd(),\n      this.config.output,\n      target === Target.main ? 'main.js' : 'index.js',\n    )\n\n    if (userConfig.entryPoints?.length ?? 1 > 1) {\n      additional.outdir = path.dirname(out)\n    } else {\n      additional.outfile = out\n    }\n\n    return deepMerge(\n      deepMerge(\n        partial,\n        {\n          external: [\n            ...(partial.external ?? []),\n            'electron',\n            ...nodeModule.builtinModules,\n          ],\n        },\n        { clone: false },\n      ),\n      additional,\n      { clone: false },\n    )\n  }\n}\n"],
  "mappings": "AAMA;AAEA;AACA;AAGA;AAGO,MAAM,oBAAgE;AAAA,EAG3E,YAA4B,QAAmB;AAAnB;AAFZ,gBAAO,WAAW;AAAA,EAEc;AAAA,EAEhD,gBACE,SACA,YACA,QACc;AAxBlB;AAyBI,UAAM,aAAoC,CAAC;AAC3C,UAAM,MAAM,KAAK,QACf,QAAQ,IAAI,GACZ,KAAK,OAAO,QACZ,WAAW,OAAO,OAAO,YAAY,UACvC;AAEA,QAAI,kBAAW,gBAAX,mBAAwB,WAAU,IAAI,GAAG;AAC3C,iBAAW,SAAS,KAAK,QAAQ,GAAG;AAAA,IACtC,OAAO;AACL,iBAAW,UAAU;AAAA,IACvB;AAEA,WAAO,UACL,UACE,SACA;AAAA,MACE,UAAU;AAAA,QACR,GAAI,QAAQ,YAAY,CAAC;AAAA,QACzB;AAAA,QACA,GAAG,WAAW;AAAA,MAChB;AAAA,IACF,GACA,EAAE,OAAO,MAAM,CACjB,GACA,YACA,EAAE,OAAO,MAAM,CACjB;AAAA,EACF;AACF;",
  "names": []
}
