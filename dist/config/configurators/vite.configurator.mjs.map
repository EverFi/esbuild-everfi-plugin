{
  "version": 3,
  "sources": ["../../../src/config/configurators/vite.configurator.mts"],
  "sourcesContent": ["/*\n * Copyright (c) 2022 Kiyozz.\n *\n * All rights reserved.\n */\n\nimport nodeModule from 'node:module'\nimport { InlineConfig } from 'vite'\n\nimport type { EnvConfig } from '../config.mjs'\nimport { TypeConfig } from '../enums.mjs'\nimport type { Configurator } from './base.configurator.mjs'\n\nexport class ViteConfigurator implements Configurator<TypeConfig.vite> {\n  public readonly type = TypeConfig.vite\n\n  constructor(public readonly config: EnvConfig) {}\n\n  toBuilderConfig(partial: Partial<InlineConfig>): InlineConfig {\n    let external = partial?.build?.rollupOptions?.external\n\n    if (!Array.isArray(external)) {\n      external = [external as string]\n    }\n\n    return {\n      build: {\n        emptyOutDir: true,\n        rollupOptions: {\n          external: [\n            ...(external ?? []),\n            'electron',\n            ...nodeModule.builtinModules,\n          ],\n        },\n      },\n      server: {\n        fs: {\n          allow: ['../..'],\n        },\n      },\n    }\n  }\n}\n"],
  "mappings": "AAMA;AAIA;AAGO,MAAM,iBAA0D;AAAA,EAGrE,YAA4B,QAAmB;AAAnB;AAFZ,gBAAO,WAAW;AAAA,EAEc;AAAA,EAEhD,gBAAgB,SAA8C;AAlBhE;AAmBI,QAAI,WAAW,+CAAS,UAAT,mBAAgB,kBAAhB,mBAA+B;AAE9C,QAAI,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC5B,iBAAW,CAAC,QAAkB;AAAA,IAChC;AAEA,WAAO;AAAA,MACL,OAAO;AAAA,QACL,aAAa;AAAA,QACb,eAAe;AAAA,UACb,UAAU;AAAA,YACR,GAAI,YAAY,CAAC;AAAA,YACjB;AAAA,YACA,GAAG,WAAW;AAAA,UAChB;AAAA,QACF;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,IAAI;AAAA,UACF,OAAO,CAAC,OAAO;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
