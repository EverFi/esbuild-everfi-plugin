{
  "version": 3,
  "sources": ["../../src/config/utils.mts"],
  "sourcesContent": ["/*\n * Copyright (c) 2022 Kiyozz.\n *\n * All rights reserved.\n */\n\nimport { BuildOptions } from 'esbuild'\nimport { Configuration } from 'webpack'\n\nimport { TypeConfig } from './enums.mjs'\nimport { PossibleConfiguration } from './types.mjs'\n\nexport function configByEnv({\n  dev,\n  type,\n}: {\n  dev: boolean\n  type: TypeConfig | null\n}): Partial<PossibleConfiguration> {\n  if (type === null) {\n    return {}\n  }\n\n  if (dev) {\n    switch (type) {\n      case TypeConfig.esbuild:\n        return {\n          incremental: true,\n          sourcemap: 'inline',\n          define: {\n            'process.env.NODE_ENV': `'${process.env.NODE_ENV}'`,\n          },\n        } as BuildOptions\n      case TypeConfig.webpack:\n        return {\n          mode: 'development',\n          devtool: 'eval-source-map',\n        } as Configuration\n      case TypeConfig.vite:\n        return {}\n    }\n  }\n\n  switch (type) {\n    case TypeConfig.esbuild:\n      return {\n        sourcemap: 'external',\n        minify: true,\n        define: {\n          'process.env.NODE_ENV': `'${process.env.NODE_ENV}'`,\n        },\n      } as BuildOptions\n    case TypeConfig.webpack:\n      return { mode: 'production', devtool: 'source-map' } as Configuration\n    case TypeConfig.vite:\n      return {}\n  }\n}\n"],
  "mappings": "AASA;AAGO,qBAAqB;AAAA,EAC1B;AAAA,EACA;AAAA,GAIiC;AACjC,MAAI,SAAS,MAAM;AACjB,WAAO,CAAC;AAAA,EACV;AAEA,MAAI,KAAK;AACP,YAAQ;AAAA,WACD,WAAW;AACd,eAAO;AAAA,UACL,aAAa;AAAA,UACb,WAAW;AAAA,UACX,QAAQ;AAAA,YACN,wBAAwB,IAAI,QAAQ,IAAI;AAAA,UAC1C;AAAA,QACF;AAAA,WACG,WAAW;AACd,eAAO;AAAA,UACL,MAAM;AAAA,UACN,SAAS;AAAA,QACX;AAAA,WACG,WAAW;AACd,eAAO,CAAC;AAAA;AAAA,EAEd;AAEA,UAAQ;AAAA,SACD,WAAW;AACd,aAAO;AAAA,QACL,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,QAAQ;AAAA,UACN,wBAAwB,IAAI,QAAQ,IAAI;AAAA,QAC1C;AAAA,MACF;AAAA,SACG,WAAW;AACd,aAAO,EAAE,MAAM,cAAc,SAAS,aAAa;AAAA,SAChD,WAAW;AACd,aAAO,CAAC;AAAA;AAEd;",
  "names": []
}
