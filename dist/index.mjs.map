{
  "version": 3,
  "sources": ["../src/index.mts"],
  "sourcesContent": ["#!/usr/bin/env node\n\n/*\n * Copyright (c) 2022 Kiyozz.\n *\n * All rights reserved.\n */\n\nimport meow from 'meow'\nimport * as fs from 'node:fs/promises'\nimport * as path from 'node:path'\nimport * as url from 'node:url'\n\nimport { Cli, CliFlags } from './cli.mjs'\nimport { commands } from './commands/index.mjs'\n\nconst getVersion = async (): Promise<string> => {\n  const dirname = path.resolve(url.fileURLToPath(import.meta.url), '..')\n  const pkgPath = path.resolve(dirname, '../package.json')\n  const pkg: { version: string } = JSON.parse(\n    (await fs.readFile(pkgPath)).toString('utf-8'),\n  )\n\n  return pkg.version\n}\n\nconst _cli = meow<CliFlags>(\n  `Usage\n  $ electron-esbuild [command]\n\nCommands\n  dev\n    Runs a development environment\n  build\n    Builds your application preparing for packaging\n\nExamples\n  $ electron-esbuild dev\n  $ electron-esbuild build`,\n  {\n    version: await getVersion(),\n    flags: {\n      clean: {\n        type: 'boolean',\n        default: true,\n      },\n    },\n    allowUnknownFlags: true,\n    importMeta: import.meta,\n  },\n)\ntype Commands = keyof typeof commands\n\nconst [_command, ...unknownInputs] = _cli.input\nconst _availableCommands = ['dev', 'build']\n\nfunction isValidAction(command?: string): command is Commands {\n  if (typeof command === 'undefined' || !_availableCommands.includes(command)) {\n    _cli.showHelp(0)\n  }\n\n  return true\n}\n\nif (isValidAction(_command)) {\n  const action: Cli = await commands[_command].create(_cli, unknownInputs)\n\n  action.init().then(() => {\n    // process.exit(0)\n  })\n}\n"],
  "mappings": ";AAQA;AACA;AACA;AACA;AAGA;AAEA,MAAM,aAAa,YAA6B;AAC9C,QAAM,UAAU,KAAK,QAAQ,IAAI,cAAc,YAAY,GAAG,GAAG,IAAI;AACrE,QAAM,UAAU,KAAK,QAAQ,SAAS,iBAAiB;AACvD,QAAM,MAA2B,KAAK,MACnC,OAAM,GAAG,SAAS,OAAO,GAAG,SAAS,OAAO,CAC/C;AAEA,SAAO,IAAI;AACb;AAEA,MAAM,OAAO,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAYA;AAAA,EACE,SAAS,MAAM,WAAW;AAAA,EAC1B,OAAO;AAAA,IACL,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA,mBAAmB;AAAA,EACnB,YAAY;AACd,CACF;AAGA,MAAM,CAAC,aAAa,iBAAiB,KAAK;AAC1C,MAAM,qBAAqB,CAAC,OAAO,OAAO;AAE1C,uBAAuB,SAAuC;AAC5D,MAAI,OAAO,YAAY,eAAe,CAAC,mBAAmB,SAAS,OAAO,GAAG;AAC3E,SAAK,SAAS,CAAC;AAAA,EACjB;AAEA,SAAO;AACT;AAEA,IAAI,cAAc,QAAQ,GAAG;AAC3B,QAAM,SAAc,MAAM,SAAS,UAAU,OAAO,MAAM,aAAa;AAEvE,SAAO,KAAK,EAAE,KAAK,MAAM;AAAA,EAEzB,CAAC;AACH;",
  "names": []
}
